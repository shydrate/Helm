---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Values.Namespace}}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    meta.helm.sh/release-namespace: {{ .Values.Namespace}}
data:
  alert-rules.yaml: |
{{ .Values.alertmanager.config.alertRules | indent 4 }}

  prometheus.yaml: |
    # global config
    global:
      scrape_interval:     60s
      evaluation_interval: 60s
      scrape_timeout:      10s

    # Alertmanager configuration
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
    rule_files:
      - alert-rules.yaml

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']
        relabel_configs:
        {{- range $k, $v := .Values.prometheus.labels }}
        - target_label: {{ $k }}
          replacement: {{ $v }}
        {{- end }}

      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
        {{- range $k, $v := .Values.prometheus.labels }}
        - target_label: {{ $k }}
          replacement: {{ $v }}
        {{- end }}

      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        metrics_path: /metrics/cadvisor
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        {{- range $k, $v := .Values.prometheus.labels }}
        - target_label: {{ $k }}
          replacement: {{ $v }}
        {{- end }}

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        metrics_path: /metrics
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        {{- range $k, $v := .Values.prometheus.labels }}
        - target_label: {{ $k }}
          replacement: {{ $v }}
        {{- end }}

      - job_name: 'kubernetes-probes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        metrics_path: /metrics/probes
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        {{- range $k, $v := .Values.prometheus.labels }}
        - target_label: {{ $k }}
          replacement: {{ $v }}
        {{- end }}

      - job_name: 'prometheus-pod-scrapes'
        kubernetes_sd_configs:
        - role: pod
        scheme: http
        metrics_path: /metrics
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        {{- range $k, $v := .Values.prometheus.labels }}
        - target_label: {{ $k }}
          replacement: {{ $v }}
        {{- end }}

      - job_name: 'solr-exporter'
        scrape_interval: 60s
        scrape_timeout: 10s
        metrics_path: /metrics
        ec2_sd_configs:
          - region: ap-south-1
            port: 9854
        relabel_configs:
          - source_labels: [__meta_ec2_tag_service]
            regex: 'solr'
            action: keep
          - source_labels: [__meta_ec2_instance_id]
            target_label: instance
          - source_labels: [__meta_ec2_tag_environment]
            target_label: environment
          - source_labels: [__meta_ec2_tag_Name]
            target_label: Name
          - source_labels: [__meta_ec2_tag_role]
            target_label: role
          - source_labels: [__meta_ec2_tag_provisioner]
            target_label: provisioner
          - source_labels: [__meta_ec2_public_ip]
            target_label: eip
          - source_labels: [__meta_ec2_private_ip]
            target_label: private_ip
          - source_labels: [__meta_ec2_vpc_id]
            target_label: vpc
          - source_labels: [__meta_ec2_public_dns_name]
            target_label: fqdn
          - source_labels: [__meta_ec2_instance_type]
            target_label: type
          - source_labels: [__meta_ec2_instance_state]
            target_label: state
          - source_labels: [__meta_ec2_availability_zone]
            target_label: az

{{ if .Values.blackbox.enabled }}
{{- tpl .Values.blackbox.config.prometheus . | indent 6 }}
{{ end }}
