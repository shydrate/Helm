---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: {{ .Values.Namespace }}
  labels:
    app: grafana
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    meta.helm.sh/release-namespace: {{ .Values.Namespace }}
data:
  default.yaml: |
    apiVersion: 1
    providers:
      - name: Default
        folder: Services
        type: file
        options:
          path: /etc/grafana/provisioning/dashboards

{{ (.Files.Glob "dashboards/kubernetes.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/aws-lb.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/autoscaler.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/velero.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/mysql-overview.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/grafana-solr-dashboard.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/zookeeper.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/solr-dashboard.json").AsConfig | indent 2 }}
{{ (.Files.Glob "dashboards/kube-state-metrics.json").AsConfig | indent 2 }}
{{- if .Values.blackbox.enabled }}
{{ (.Files.Glob "dashboards/blackbox.json").AsConfig | indent 2 }}
{{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: {{ .Values.Namespace }}
  labels:
    app: grafana
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    meta.helm.sh/release-namespace: {{ .Values.Namespace }}
data:
  loki.yaml: |
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        orgId: 1
        uid: loki
        url: http://{{ .Chart.Name }}-loki:3100
        editable: false
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        uid: prometheus
        url: http://prometheus:9090
        editable: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: {{ .Values.Namespace }}
  labels:
    app: loki
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    meta.helm.sh/release-namespace: {{ .Values.Namespace }}
data:
  grafana.ini: |
    app_mode = production
    

    #################################### Server ####################################
    [server]
    protocol = http

    # The ip address to bind to, empty will bind to all interfaces
    ;http_addr =

    # The http port  to use
    ;http_port = 3000

    # The public facing domain name used to access grafana from a browser

    # Redirect to correct domain if host header does not match domain
    # Prevents DNS rebinding attacks
    enforce_domain = false

    # The full public facing url you use in browser, used for redirects and emails
    # If you use reverse proxy and sub path specify full url (with sub path)
    ;root_url = %(protocol)s://%(domain)s:%(http_port)s/

    # Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
    ;serve_from_sub_path = false

    # Log web requests
    ;router_logging = false

    # the path relative working path
    ;static_root_path = public

    # enable gzip
    ;enable_gzip = false

    # https certs & key file
    ;cert_file =
    ;cert_key =

    # Unix socket path
    ;socket =

    #################################### Database ####################################
    [database]
    # You can configure the database connection by specifying type, host, name, user and password
    # as separate properties or as on string using the url properties.

    # Either "mysql", "postgres" or "sqlite3", it's your choice
    ;type = sqlite3
    ;host = 127.0.0.1:3306
    ;name = grafana
    ;user = root
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    ;password =

    # Use either URL or the previous fields to configure the database
    # Example: mysql://user:secret@host:port/database
    ;url =

    # For "postgres" only, either "disable", "require" or "verify-full"
    ;ssl_mode = disable

    ;ca_cert_path =
    ;client_key_path =
    ;client_cert_path =
    ;server_cert_name =

    # For "sqlite3" only, path relative to data_path setting
    ;path = grafana.db

    # Max idle conn setting default is 2
    ;max_idle_conn = 2

    # Max conn setting default is 0 (mean not set)
    ;max_open_conn =

    # Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
    ;conn_max_lifetime = 14400

    # Set to true to log the sql calls and execution times.
    ;log_queries =

    # For "sqlite3" only. cache mode setting used for connecting to the database. (private, shared)
    ;cache_mode = private

    #################################### Cache server #############################
    [remote_cache]
    # Either "redis", "memcached" or "database" default is "database"
    ;type = database

    # cache connectionstring options
    # database: will use Grafana primary database.
    # redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=0,ssl=false`. Only addr is required. ssl may be 'true', 'false', or 'insecure'.
    # memcache: 127.0.0.1:11211
    ;connstr =

    #################################### Data proxy ###########################
    [dataproxy]

    # This enables data proxy logging, default is false
    ;logging = false

    # How long the data proxy waits before timing out, default is 30 seconds.
    # This setting also applies to core backend HTTP data sources where query requests use an HTTP client with timeout set.
    ;timeout = 30

    # If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request, default is false.
    ;send_user_header = false

    #################################### Analytics ####################################
    [analytics]
    reporting_enabled = false
    check_for_updates = true

    # Google Analytics universal tracking code, only enabled if you specify an id here
    ;google_analytics_ua_id =

    # Google Tag Manager ID, only enabled if you specify an id here
    ;google_tag_manager_id =

    #################################### Security ####################################
    [security]
    disable_initial_admin_creation = false
    admin_user = admin
    admin_password = admin

    # used for signing
    ;secret_key = SW2YcwTIb9zpOOhoPsMm

    # disable gravatar profile images
    ;disable_gravatar = false

    # data source proxy whitelist (ip_or_domain:port separated by spaces)
    ;data_source_proxy_whitelist =

    # disable protection against brute force login attempts
    ;disable_brute_force_login_protection = false

    # set to true if you host Grafana behind HTTPS. default is false.
    ;cookie_secure = false

    # set cookie SameSite attribute. defaults to `lax`. can be set to "lax", "strict", "none" and "disabled"
    ;cookie_samesite = lax

    # set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
    ;allow_embedding = false

    # Set to true if you want to enable http strict transport security (HSTS) response header.
    # This is only sent when HTTPS is enabled in this configuration.
    # HSTS tells browsers that the site should only be accessed using HTTPS.
    ;strict_transport_security = false

    # Sets how long a browser should cache HSTS. Only applied if strict_transport_security is enabled.
    ;strict_transport_security_max_age_seconds = 86400

    # Set to true if to enable HSTS preloading option. Only applied if strict_transport_security is enabled.
    ;strict_transport_security_preload = false

    # Set to true if to enable the HSTS includeSubDomains option. Only applied if strict_transport_security is enabled.
    ;strict_transport_security_subdomains = false

    # Set to true to enable the X-Content-Type-Options response header.
    # The X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised
    # in the Content-Type headers should not be changed and be followed.
    ;x_content_type_options = true

    # Set to true to enable the X-XSS-Protection header, which tells browsers to stop pages from loading
    # when they detect reflected cross-site scripting (XSS) attacks.
    ;x_xss_protection = true

    #################################### Snapshots ###########################
    [snapshots]
    # snapshot sharing options
    external_enabled = false
    ;external_snapshot_url = https://snapshots-origin.raintank.io
    ;external_snapshot_name = Publish to snapshot.raintank.io

    # Set to true to enable this Grafana instance act as an external snapshot server and allow unauthenticated requests for
    # creating and deleting snapshots.
    ;public_mode = false

    # remove expired snapshot
    ;snapshot_remove_expired = true

    #################################### Dashboards History ##################
    [dashboards]
    # Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1
    ;versions_to_keep = 20

    # Minimum dashboard refresh interval. When set, this will restrict users to set the refresh interval of a dashboard lower than given interval. Per default this is 5 seconds.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    min_refresh_interval = 30s

    # Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + "dashboards/home.json"
    ;default_home_dashboard_path =

    #################################### Users ###############################
    [users]
    # disable user signup / registration
    allow_sign_up = false

    # Allow non admin users to create organizations
    ;allow_org_create = true

    # Set to true to automatically assign new users to the default organization (id 1)
    ;auto_assign_org = true

    # Set this value to automatically add new users to the provided organization (if auto_assign_org above is set to true)
    ;auto_assign_org_id = 1

    # Default role new users will be automatically assigned (if disabled above is set to true)
    ;auto_assign_org_role = Viewer

    # Require email validation before sign up completes
    ;verify_email_enabled = false

    # Background text for the user field on the login page
    ;login_hint = email or username
    ;password_hint = password

    # Default UI theme ("dark" or "light")
    ;default_theme = dark

    # External user management, these options affect the organization users view
    ;external_manage_link_url =
    ;external_manage_link_name =
    ;external_manage_info =

    # Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
    ;viewers_can_edit = false

    # Editors can administrate dashboard, folders and teams they create
    ;editors_can_admin = false

    [auth]
    # Login cookie name
    ;login_cookie_name = grafana_session

    # The maximum lifetime (duration) an authenticated user can be inactive before being required to login at next visit. Default is 7 days (7d). This setting should be expressed as a duration, e.g. 5m (minutes), 6h (hours), 10d (days), 2w (weeks), 1M (month). The lifetime resets at each successful token rotation
    ;login_maximum_inactive_lifetime_duration =

    # The maximum lifetime (duration) an authenticated user can be logged in since login time before being required to login. Default is 30 days (30d). This setting should be expressed as a duration, e.g. 5m (minutes), 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;login_maximum_lifetime_duration =

    # How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
    ;token_rotation_interval_minutes = 10

    # Set to true to disable (hide) the login form, useful if you use OAuth, defaults to false
    ;disable_login_form = false

    # Set to true to disable the signout link in the side menu. useful if you use auth.proxy, defaults to false
    ;disable_signout_menu = false

    # URL to redirect the user to after sign out
    ;signout_redirect_url =

    # Set to true to attempt login with OAuth automatically, skipping the login screen.
    # This setting is ignored if multiple OAuth providers are configured.
    ;oauth_auto_login = false

    # OAuth state max age cookie duration in seconds. Defaults to 600 seconds.
    ;oauth_state_cookie_max_age = 600

    # limit of api_key seconds to live before expiration
    ;api_key_max_seconds_to_live = -1

    #################################### Anonymous Auth ######################
    [auth.anonymous]
    # enable anonymous access
    enabled = true

    # specify organization name that should be used for unauthenticated users
    ;org_name = Main Org.

    # specify role for unauthenticated users
    ;org_role = Viewer

    # mask the Grafana version number for unauthenticated users
    ;hide_version = false

    #################################### Basic Auth ##########################
    [auth.basic]
    ;enabled = true

    #################################### SMTP / Emailing ##########################
    [smtp]
    ;enabled = false
    ;host = localhost:25
    ;user =
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    ;password =
    ;cert_file =
    ;key_file =
    ;skip_verify = false
    ;from_address = admin@grafana.localhost
    ;from_name = Grafana
    # EHLO identity in SMTP dialog (defaults to instance_name)
    ;ehlo_identity = dashboard.example.com
    # SMTP startTLS policy (defaults to 'OpportunisticStartTLS')
    ;startTLS_policy = NoStartTLS

    [emails]
    ;welcome_email_on_sign_up = false
    ;templates_pattern = emails/*.html

    #################################### Logging ##########################
    [log]
    mode = console
    level = info

    # optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug
    ;filters =

    # For "console" mode only
    [log.console]
    ;level =

    # log line format, valid options are text, console and json
    format = console

    #################################### Usage Quotas ########################
    [quota]
    enabled = false

    #################################### Alerting ############################
    [alerting]
    # Disable alerting engine & UI features
    ;enabled = true
    # Makes it possible to turn off alert rule execution but alerting UI is visible
    ;execute_alerts = true

    # Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)
    ;error_or_timeout = alerting

    # Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)
    ;nodata_or_nullvalues = no_data

    # Alert notifications can include images, but rendering many images at the same time can overload the server
    # This limit will protect the server from render overloading and make sure notifications are sent out quickly
    ;concurrent_render_limit = 5

    # Default setting for alert calculation timeout. Default value is 30
    ;evaluation_timeout_seconds = 30

    # Default setting for alert notification timeout. Default value is 30
    ;notification_timeout_seconds = 30

    # Default setting for max attempts to sending alert notifications. Default value is 3
    ;max_attempts = 3

    # Makes it possible to enforce a minimal interval between evaluations, to reduce load on the backend
    ;min_interval_seconds = 1

    # Configures for how long alert annotations are stored. Default is 0, which keeps them forever.
    # This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;max_annotation_age =

    # Configures max number of alert annotations that Grafana stores. Default value is 0, which keeps all alert annotations.
    ;max_annotations_to_keep =

    #################################### Annotations #########################

    [annotations.dashboard]
    # Dashboard annotations means that annotations are associated with the dashboard they are created on.

    # Configures how long dashboard annotations are stored. Default is 0, which keeps them forever.
    # This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;max_age =

    # Configures max number of dashboard annotations that Grafana stores. Default value is 0, which keeps all dashboard annotations.
    ;max_annotations_to_keep =

    [annotations.api]
    # API annotations means that the annotations have been created using the API without any
    # association with a dashboard.

    # Configures how long Grafana stores API annotations. Default is 0, which keeps them forever.
    # This setting should be expressed as a duration. Examples: 6h (hours), 10d (days), 2w (weeks), 1M (month).
    ;max_age =

    # Configures max number of API annotations that Grafana keeps. Default value is 0, which keeps all API annotations.
    ;max_annotations_to_keep =

    #################################### Explore #############################
    [explore]
    # Enable the Explore section
    enabled = true

    #################################### Internal Grafana Metrics ##########################
    # Metrics available at HTTP API Url /metrics
    [metrics]
    # Disable / Enable internal metrics
    enabled           = true
    # Graphite Publish interval
    interval_seconds  = 60
    # Disable total stats (stat_totals_*) metrics to be generated
    ;disable_total_stats = false




    # [paths]
    # data = /var/lib/grafana/data
    # logs = /var/log/grafana
    # plugins = /var/lib/grafana/plugins
    # provisioning = /etc/grafana/provisioning

    # [server]
    # http_port = 3000
    # root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
    # serve_from_sub_path = true

    # [database]
    # type = sqlite3
    # host = 127.0.0.1:3306
    # name = grafana
    # user = root
    # password = your-password

    # [security]
    # admin_user = admin
    # admin_password = your-admin-password
    # secret_key = your-secret-key
    # disable_gravatar = true

    # [analytics]
    # check_for_updates = true

    # [users]
    # allow_sign_up = false

    # [auth]
    # disable_login_form = false

    # [smtp]
    # enabled = true
    # host = smtp.example.com:587
    # user = your-smtp-username
    # password = your-smtp-password
    # from_address = grafana@example.com
    # from_name = Grafana

    # [log]
    # level = info
    # filters = rendering:debug

    # [log.console]
    # level = info

    # [log.file]
    # level = warn

    # [log.syslog]
    # level = warn